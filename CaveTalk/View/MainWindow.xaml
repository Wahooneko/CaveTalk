<rb:RibbonWindow x:Class="CaveTube.CaveTalk.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:rb="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:b="clr-namespace:CaveTube.CaveTalk.Behavior"
        xmlns:v="clr-namespace:CaveTube.CaveTalk.View"
        xmlns:vm="clr-namespace:CaveTube.CaveTalk.ViewModel"
        xmlns:rbc="clr-namespace:CaveTube.CaveTalk.Control"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        x:Name="Root"
        Title="CaveTalk" Height="350" Width="525" MinWidth="400" MinHeight="350" Icon="/CaveTalk;component/Images/cavelis.ico">
    <rb:RibbonWindow.Resources>
        <vm:ConnectingStatusConverter x:Key="ConnectingStatusConverter" />
        <Style x:Key="DefaultCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="AliceBlue" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Header="コメントをコピー" Command="{Binding Path=CopyCommentCommand}" />
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </rb:RibbonWindow.Resources>
    <rb:RibbonWindow.CommandBindings>
        <CommandBinding Command="{x:Static Member=v:MainWindow.RestoreWindowCommand}" Executed="RestoreWindowExecuted" />
    </rb:RibbonWindow.CommandBindings>
    <rb:RibbonWindow.Style>
        <Style TargetType="{x:Type rb:RibbonWindow}">
            <Setter Property="ShowInTaskbar" Value="True" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=Root, Path=WindowState}" Value="Minimized" />
                        <Condition Binding="{Binding Path=RoomJoinStatus}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ShowInTaskbar" Value="False" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </rb:RibbonWindow.Style>
    <DockPanel>
        <tb:TaskbarIcon x:Name="MyNotifyIcon" IconSource="/CaveTalk;component/Images/cavelis.ico" MenuActivation="RightClick" LeftClickCommand="{x:Static Member=v:MainWindow.RestoreWindowCommand}">
            <tb:TaskbarIcon.Style>
                <Style TargetType="{x:Type tb:TaskbarIcon}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=Root, Path=WindowState}" Value="Minimized" />
                                <Condition Binding="{Binding Path=RoomJoinStatus}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </tb:TaskbarIcon.Style>
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="開く" Click="ResotreWindowButtonClick" />
                    <MenuItem Header="通知を有効にする" Command="{Binding Path=EnableNotifyCommand}">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=NotifyStatus}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="通知を無効にする"  Command="{Binding Path=DisableNotifyCommand}">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=NotifyStatus}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <rb:Ribbon DockPanel.Dock="Top">
            <rb:Ribbon.ApplicationMenu>
                <rb:RibbonApplicationMenu Label="ファイル" SmallImageSource="/CaveTalk;component/Images/document.png">
                    <rb:RibbonApplicationMenuItem Header="CaveTalkについて(_V)" Command="{Binding Path=AboutBoxCommand}" ImageSource="/CaveTalk;component/Images/info.png"></rb:RibbonApplicationMenuItem>
                    <rb:RibbonApplicationMenuItem Header="終了(_X)" Command="Close" ImageSource="/CaveTalk;component/Images/close.png" />
                </rb:RibbonApplicationMenu>
            </rb:Ribbon.ApplicationMenu>
            <rb:RibbonTab Header="ホーム" Selector.IsSelected="True">
                <rb:RibbonGroup Header="CaveTube">
                    <rb:RibbonMenuButton Label="接続状態">
                        <rb:RibbonMenuButton.Style>
                            <Style TargetType="{x:Type rb:RibbonMenuButton}">
                                <Setter Property="LargeImageSource" Value="/CaveTalk;component/Images/connect_no.png" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=RoomJoinStatus}" Value="True">
                                        <Setter Property="LargeImageSource" Value="/CaveTalk;component/Images/connect_established.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </rb:RibbonMenuButton.Style>
                        <rb:RibbonMenuItem Header="部屋から切断する" IsEnabled="{Binding Path=RoomJoinStatus}" Command="{Binding Path=LeaveRoomCommand}" />
                    </rb:RibbonMenuButton>
                    <rbc:RibbonTextBlock Label="接続人数" Text="{Binding Path=Listener, Mode=OneWay}" />
                    <rb:RibbonMenuButton Label="ログイン状態">
                        <rb:RibbonMenuItem Header="ログイン" Command="{Binding Path=LoginCommand}">
                            <rb:RibbonMenuItem.Style>
                                <Style TargetType="rb:RibbonMenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=LoginStatus}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </rb:RibbonMenuItem.Style>
                        </rb:RibbonMenuItem>
                        <rb:RibbonMenuItem Header="他のアカウントでログイン" Command="{Binding Path=SwitchAccountCommand}">
                            <rb:RibbonMenuItem.Style>
                                <Style TargetType="rb:RibbonMenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=LoginStatus}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </rb:RibbonMenuItem.Style>
                        </rb:RibbonMenuItem>
                        <rb:RibbonMenuItem Header="ログアウト" Command="{Binding Path=LogoutCommand}">
                            <rb:RibbonMenuItem.Style>
                                <Style TargetType="rb:RibbonMenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=LoginStatus}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </rb:RibbonMenuItem.Style>
                        </rb:RibbonMenuItem>
                        <rb:RibbonMenuButton.Style>
                            <Style TargetType="{x:Type rb:RibbonMenuButton}">
                                <Setter Property="LargeImageSource" Value="/CaveTalk;component/Images/cavetube_disable.png" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=LoginStatus}" Value="True">
                                        <Setter Property="LargeImageSource" Value="/CaveTalk;component/Images/cavetube.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </rb:RibbonMenuButton.Style>
                    </rb:RibbonMenuButton>
                </rb:RibbonGroup>
                <rb:RibbonGroup Header="棒読み">
                    <rb:RibbonMenuButton Label="接続状態">
                        <rb:RibbonMenuButton.Style>
                            <Style TargetType="{x:Type rb:RibbonMenuButton}">
                                <Setter Property="LargeImageSource" Value="/CaveTalk;component/Images/connect_no.png" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=BouyomiStatus}" Value="True">
                                        <Setter Property="LargeImageSource" Value="/CaveTalk;component/Images/connect_established.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </rb:RibbonMenuButton.Style>
                        <rb:RibbonMenuItem Header="棒読みちゃんに接続" Command="{Binding Path=ConnectBouyomiCommand}">
                            <rb:RibbonMenuItem.Style>
                                <Style TargetType="rb:RibbonMenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=BouyomiStatus}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </rb:RibbonMenuItem.Style>
                        </rb:RibbonMenuItem>
                        <rb:RibbonMenuItem Header="棒読みちゃんから切断" Command="{Binding Path=DisconnectBouyomiCommand}">
                            <rb:RibbonMenuItem.Style>
                                <Style TargetType="rb:RibbonMenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=BouyomiStatus}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </rb:RibbonMenuItem.Style>
                        </rb:RibbonMenuItem>
                    </rb:RibbonMenuButton>
                </rb:RibbonGroup>
                <rb:RibbonGroup Header="配信通知">
                    <rb:RibbonMenuButton Label="通知状態">
                        <rb:RibbonMenuButton.Style>
                            <Style TargetType="{x:Type rb:RibbonMenuButton}">
                                <Setter Property="LargeImageSource" Value="/CaveTalk;component/Images/notify_no.png" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=NotifyStatus}" Value="True">
                                        <Setter Property="LargeImageSource" Value="/CaveTalk;component/Images/notify.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </rb:RibbonMenuButton.Style>
                        <rb:RibbonMenuItem Header="通知を有効にする" Command="{Binding Path=EnableNotifyCommand}">
                            <rb:RibbonMenuItem.Style>
                                <Style TargetType="rb:RibbonMenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=NotifyStatus}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </rb:RibbonMenuItem.Style>
                        </rb:RibbonMenuItem>
                        <rb:RibbonMenuItem Header="通知を無効にする" Command="{Binding Path=DisableNotifyCommand}">
                            <rb:RibbonMenuItem.Style>
                                <Style TargetType="rb:RibbonMenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=NotifyStatus}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </rb:RibbonMenuItem.Style>
                        </rb:RibbonMenuItem>
                    </rb:RibbonMenuButton>
                </rb:RibbonGroup>
            </rb:RibbonTab>
        </rb:Ribbon>
        <Border Padding="5" DockPanel.Dock="Top">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" BorderThickness="1,1,0,1" BorderBrush="#FFB9C9DA">
                    <Label>放送URL
                        <Label.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFEDF3F9" Offset="0.619" />
                                <GradientStop Color="White" Offset="0" />
                            </LinearGradientBrush>
                        </Label.Background>
                    </Label>
                </Border>
                <ComboBox Grid.Column="1" IsEditable="True" Text="{Binding Path=LiveUrl}">
                    <i:Interaction.Behaviors>
                        <b:ComboBoxPlaceholderBehavior Placeholder="放送URL、またはストリーム番号を入力してください。" />
                        <b:ExecCommandOnEnterKeyDownBehavior Command="JoinRoomCommand" />
                    </i:Interaction.Behaviors>
                </ComboBox>
                <Button Grid.Column="3" Content="接続" Command="{Binding Path=JoinRoomCommand}" />
            </Grid>
        </Border>
        <Border Padding="5" DockPanel.Dock="Bottom">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Text="{Binding Path=PostName}">
                    <i:Interaction.Behaviors>
                        <b:TextBoxPlaceholderBehavior Placeholder="名前" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox Grid.Column="2" Text="{Binding Path=PostMessage, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=RoomJoinStatus}">
                    <i:Interaction.Behaviors>
                        <b:TextBoxPlaceholderBehavior Placeholder="コメントを記述してください。" />
                        <b:ExecCommandOnCtrlAndEnterKeyDownBehavior Command="PostCommentCommand" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <Button Grid.Column="4" x:Name="PostKey" Content="書き込み" Command="{Binding Path=PostCommentCommand}" IsEnabled="{Binding Path=RoomJoinStatus}" />
            </Grid>
        </Border>
        <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Path=MessageList}" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" HeadersVisibility="Column" IsReadOnly="True" SelectedIndex="{Binding Path=MessageIndex}">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=Number}" Header="No" Width="40" CellStyle="{StaticResource ResourceKey=DefaultCellStyle}" />
                <DataGridTextColumn Binding="{Binding Path=Name}" Header="Name" Width="80">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource ResourceKey=DefaultCellStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Auth}" Value="True">
                                    <Setter Property="Foreground" Value="ForestGreen" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Comment" Width="*" CellStyle="{StaticResource ResourceKey=DefaultCellStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock TextWrapping="Wrap" Text="{Binding Path=Comment}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Path=Time, StringFormat=HH:mm:ss}" Header="Time" Width="80" CellStyle="{StaticResource ResourceKey=DefaultCellStyle}" />
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</rb:RibbonWindow>
